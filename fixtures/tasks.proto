syntax = "proto3";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/visibility.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "s12/protobuf/workato/annotations.proto";

package api.tasks.v1;

option go_package = "fixtures/tasks;tasks";

service TasksService {
  // Task Event
  rpc TriggerTask(TriggerTaskRequest) returns (TriggerTaskResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation).tags = "Tasks";
    option (s12.protobuf.workato.method).trigger = true;
  }

  // List all of the tasks
  rpc ListTasks(ListTasksRequest) returns (ListTasksResponse) {
    option (s12.protobuf.workato.method) = {
      picklist: {
        label: "tasks.name"
        value: "tasks.id"
      }
    };

    option (google.api.http) = {
      get: "/v1/tasks"
    };
  }

  // Create a new task from the supplied input.
  //
  // Allows the user to create a new task and this is a really long multiline description.
  rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Tasks (NEW)";
    };
    option (s12.protobuf.workato.method) = {
      actionGroupName: "Tasks"
    };
    option (google.api.http) = {
      post: "/v1/tasks"
      body: "*"
    };
  }

  // Get a task by ID
  rpc GetTask(GetTaskRequest) returns (GetTaskResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a task"
      description: "This description comes from the OpenAPI tag\nabc\n123"
      tags: ["Tickets","Tasks", "Issues"]
    };

    option (google.api.http) = {
      get: "/v1/tasks/{id}"
    };
  }

  // Get a task by ID (but privately)
  rpc PrivateGetTask(GetTaskRequest) returns (GetTaskResponse) {
    option (google.api.http) = {
      get: "/v1/private/tasks/{id}"
    };
  }

  // Update a task by ID
  // This hint includes a [link](https://google.com)
  rpc UpdateTask(UpdateTaskRequest) returns (UpdateTaskResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation).tags = "Tasks";

    option (google.api.http) = {
      put: "/v1/tasks/{id}"
      body: "*"
    };
  }

  // Update a task by ID
  rpc UpdateTaskNested(UpdateTaskNestedRequest) returns (UpdateTaskResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation).tags = "Tasks";

    option (google.api.http) = {
      put: "/v1/tasks/{task.id}"
      body: "*"
    };
  }

  // Delete a task by ID
  rpc DeleteTask(DeleteTaskRequest) returns (DeleteTaskResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Tasks"]
      external_docs: {
        url: "https://google.com"
        description: "Check out these docs to learn more"
      }
    };

    option (google.api.http) = {
      delete: "/v1/tasks/{id}"
    };
  }

  // Add a comment to a task
  rpc AddComment(AddCommentRequest) returns (AddCommentResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Task Comments"]
      external_docs: {
        url: "https://google.com"
      }
    };

    option (google.api.http) = {
      post: "/v1/tasks/{task_id}/comment"
      body: "*"
    };
  }

  // Update a comment on a task
  rpc UpdateComment(UpdateCommentRequest) returns (UpdateCommentResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation).tags = "Task Comments";
    option (google.api.http) = {
      put: "/v1/tasks/{task_id}/comment/{comment_id}"
      body: "*"
    };
  }

  // Custom Action with custom code
  rpc CustomAction(CustomActionRequest) returns (CustomActionResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation).tags = "Tasks";
  }

  // Generate tasks report
  rpc GenerateReport(GenerateReportRequest) returns (GenerateReportResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation).tags = "Tasks";
    option (google.api.http) = {
      post: "/v1/tasks/action=generateReport"
      body: "*"
    };
  }

  rpc UpdateStatus(UpdateStatusRequest) returns (google.protobuf.Empty) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation).tags = "Tasks";
    option (google.api.http) = {
      post: "/v1/tasks/{task_id}/status"
      body: "*"
    };
  }

  rpc UpdateStatusWithBody(UpdateStatusRequest) returns (google.protobuf.Empty) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation).tags = "Tasks";
    option (google.api.http) = {
      post: "/v1/tasks/{task_id}/status"
      body: "status"
    };
  }

  rpc UpdateStatusNoHttpOption(UpdateStatusRequest) returns (google.protobuf.Empty) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation).tags = "Tasks";
  }

  rpc GetTaskIDsForUser(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation).tags = "Tasks";
    option (google.api.http) = {
      get: "/v1/tasks/{user_id}"
      body: "*"
    };
  }

  rpc GetTaskPrivately(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.method_visibility).restriction = "INTERNAL";
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation).tags = "Tasks";

    option (google.api.http) = {
      get: "/v1/tasks/{user_id}"
      body: "*"
    };
  }

  rpc GetTaskPrivatelyButInWorkato(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.method_visibility).restriction = "INTERNAL,WORKATO";
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation).tags = "Tasks";

    option (google.api.http) = {
      get: "/v1/tasks/{user_id}"
      body: "*"
    };
  }
}

message Task {
  // The ID of the task
  string id = 1;
  // The name of the task
  string name = 2;
}

message ListTasksRequest {

  enum Status {
    UNKNOWN = 0;
    ACTIVE = 1;
    ARCHIVED = 2;
  }

  // Filter Tasks to those with one of the the given status
  repeated Status statuses = 1;

  // Filter Tasks by ID
  repeated string ids = 2;

  // Limit page size
  uint32 page_size = 3;
}

message ListTasksResponse {
  repeated Task tasks = 1;
}

message GetTaskRequest {
  // The ID of the task
  string id = 1;

  Wrappers wrappers = 2;
}

message GetTaskResponse {
  Task task = 1;
}

message DeleteTaskRequest {
  // The ID of the task
  string id = 1;
}

message DeleteTaskResponse {}

message UpdateTaskRequest {
  // The ID of the task
  string id = 1 [(s12.protobuf.workato.field) = {
    dynamic_picklist: "api.tasks.v1.TasksService/ListTasks"
  }];

  // The name of the task
  string name = 2;
}

message UpdateTaskResponse {}

message UpdateTaskNestedRequest {
  Task task = 1;
}

message CreateTaskRequest {
  // The name of the task
  string name = 1;

  // The description of the task
  string description = 2 [(google.api.field_visibility).restriction = "INTERNAL"];

  // Should send sms confirmation
  bool sms_confirmation = 3;

  // Number of SMS retries
  uint32 sms_retries = 4;

  // Deprecated: Do not use
  string task_type = 5 [
    deprecated = true
  ];

  // Test field for control_type functionality - should render as string input
  repeated ListTasksRequest.Status priority_levels = 6 [(s12.protobuf.workato.field) = { control_type: "string" }];

  // Test field for backwards compatibility - should render as multiselect (default)
  repeated ListTasksRequest.Status status_filters = 7;

}

message CreateTaskResponse {
  // The ID of the task
  string id = 1;
}

message AddCommentRequest {
  // The ID of the task
  string task_id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (s12.protobuf.workato.field) = { important: true }
  ];

  // The comment to add
  string comment = 2;
}

message AddCommentResponse {
  // The ID of the comment
  string comment_id = 1;
}

message UpdateCommentRequest {
  // The ID of the task
  string task_id = 1;

  // The ID comment to update
  string comment_id = 2;

  // The updated comment
  string comment = 3;

  string timezone = 4 [(s12.protobuf.workato.field) = { picklist: "timezones" }];
}

message UpdateCommentResponse {}

message TriggerTaskRequest {
  enum TriggerEvent {
    // Unspecified Event
    TRIGGER_EVENT_UNSPECIFIED = 0;
    // Task 'Started'
    TRIGGER_EVENT_TASK_CREATED = 1;
    // Task Updated
    TRIGGER_EVENT_TASK_UPDATED = 2;
    // Task Closed
    TRIGGER_EVENT_TASK_CLOSED = 3;
    // Task Deleted
    TRIGGER_EVENT_TASK_DELETED = 4;
  }
  // Trigger event to subscribe to.
  TriggerEvent trigger = 1;
}

message TriggerTaskResponse {
  string webhook_id = 1;
  string task_id = 2;
}

message CustomActionRequest {

}
message CustomActionResponse {

}

message UpdateStatusRequest {
  message Status {
    string abc = 123;
  }

  Status status = 1;
}

message UnusedButIncluded {
  string abc = 1;
}

message UnusedMessage {
  string xyz = 1;
}

// Request object for GenerateReport
message GenerateReportRequest {

  // Wrapper for ReportFormat
  message ReportFormatWrapper {
    enum ReportFormat {
      UNKNOWN = 0;

      // CSV Format
      CSV = 1;

      // TSV Format
      TSV = 2;

      // Hidden format
      HIDDEN = 3 [(google.api.value_visibility).restriction = "INTERNAL"];
    }
  }

  // Wrapper for DeliveryMethod
  message DeliveryMethodWrapper {
    enum DeliveryMethod {
      UNKNOWN = 0;

      // PDF Format
      EMAIL_PDF = 1;

      // HTML Format
      EMAIL_HTML = 2;
    }
  }

  // Include active tasks only
  bool active_tasks_only = 1;

  // Report format
  ReportFormatWrapper.ReportFormat format = 2;

  // Report delivery method
  DeliveryMethodWrapper.DeliveryMethod delivery = 3;
}

// Response object for GenerateReport
message GenerateReportResponse {
}

// A bunch of wrapper messages
message Wrappers {
  google.protobuf.DoubleValue double_value = 1;
  google.protobuf.FloatValue float_value = 2;
  google.protobuf.Int64Value int64_value = 3;
  google.protobuf.UInt64Value uint64_value = 4;
  google.protobuf.Int32Value int32_value = 5;
  google.protobuf.UInt32Value uint32_value = 6;
  google.protobuf.BoolValue bool_value = 7;
  google.protobuf.StringValue string_value = 8;
  google.protobuf.BytesValue bytes_value = 9;
}
