// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: s12/protobuf/workato/annotations.proto

package workato

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PicklistOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PicklistOptions) Reset() {
	*x = PicklistOptions{}
	mi := &file_s12_protobuf_workato_annotations_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PicklistOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PicklistOptions) ProtoMessage() {}

func (x *PicklistOptions) ProtoReflect() protoreflect.Message {
	mi := &file_s12_protobuf_workato_annotations_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PicklistOptions.ProtoReflect.Descriptor instead.
func (*PicklistOptions) Descriptor() ([]byte, []int) {
	return file_s12_protobuf_workato_annotations_proto_rawDescGZIP(), []int{0}
}

func (x *PicklistOptions) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PicklistOptions) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// MethodOptionsWorkatoTrigger
type MethodOptionsWorkato struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Trigger  bool                   `protobuf:"varint,1,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Picklist *PicklistOptions       `protobuf:"bytes,2,opt,name=picklist,proto3" json:"picklist,omitempty"`
	// @deprecated use google.api.method_visibility instead
	//
	// Deprecated: Marked as deprecated in s12/protobuf/workato/annotations.proto.
	Excluded        bool   `protobuf:"varint,3,opt,name=excluded,proto3" json:"excluded,omitempty"`
	ActionGroupName string `protobuf:"bytes,4,opt,name=actionGroupName,proto3" json:"actionGroupName,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MethodOptionsWorkato) Reset() {
	*x = MethodOptionsWorkato{}
	mi := &file_s12_protobuf_workato_annotations_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MethodOptionsWorkato) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodOptionsWorkato) ProtoMessage() {}

func (x *MethodOptionsWorkato) ProtoReflect() protoreflect.Message {
	mi := &file_s12_protobuf_workato_annotations_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodOptionsWorkato.ProtoReflect.Descriptor instead.
func (*MethodOptionsWorkato) Descriptor() ([]byte, []int) {
	return file_s12_protobuf_workato_annotations_proto_rawDescGZIP(), []int{1}
}

func (x *MethodOptionsWorkato) GetTrigger() bool {
	if x != nil {
		return x.Trigger
	}
	return false
}

func (x *MethodOptionsWorkato) GetPicklist() *PicklistOptions {
	if x != nil {
		return x.Picklist
	}
	return nil
}

// Deprecated: Marked as deprecated in s12/protobuf/workato/annotations.proto.
func (x *MethodOptionsWorkato) GetExcluded() bool {
	if x != nil {
		return x.Excluded
	}
	return false
}

func (x *MethodOptionsWorkato) GetActionGroupName() string {
	if x != nil {
		return x.ActionGroupName
	}
	return ""
}

// FieldOptionsWorkato
type FieldOptionsWorkato struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DynamicPicklist string                 `protobuf:"bytes,1,opt,name=dynamic_picklist,json=dynamicPicklist,proto3" json:"dynamic_picklist,omitempty"`
	// @deprecated use google.api.field_visibility instead
	//
	// Deprecated: Marked as deprecated in s12/protobuf/workato/annotations.proto.
	Excluded bool   `protobuf:"varint,2,opt,name=excluded,proto3" json:"excluded,omitempty"`
	Picklist string `protobuf:"bytes,3,opt,name=picklist,proto3" json:"picklist,omitempty"`
	// marks a field `sticky`
	Important bool `protobuf:"varint,4,opt,name=important,proto3" json:"important,omitempty"`
	// allows overriding the default control type
	ControlType   string `protobuf:"bytes,5,opt,name=control_type,json=controlType,proto3" json:"control_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldOptionsWorkato) Reset() {
	*x = FieldOptionsWorkato{}
	mi := &file_s12_protobuf_workato_annotations_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldOptionsWorkato) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOptionsWorkato) ProtoMessage() {}

func (x *FieldOptionsWorkato) ProtoReflect() protoreflect.Message {
	mi := &file_s12_protobuf_workato_annotations_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOptionsWorkato.ProtoReflect.Descriptor instead.
func (*FieldOptionsWorkato) Descriptor() ([]byte, []int) {
	return file_s12_protobuf_workato_annotations_proto_rawDescGZIP(), []int{2}
}

func (x *FieldOptionsWorkato) GetDynamicPicklist() string {
	if x != nil {
		return x.DynamicPicklist
	}
	return ""
}

// Deprecated: Marked as deprecated in s12/protobuf/workato/annotations.proto.
func (x *FieldOptionsWorkato) GetExcluded() bool {
	if x != nil {
		return x.Excluded
	}
	return false
}

func (x *FieldOptionsWorkato) GetPicklist() string {
	if x != nil {
		return x.Picklist
	}
	return ""
}

func (x *FieldOptionsWorkato) GetImportant() bool {
	if x != nil {
		return x.Important
	}
	return false
}

func (x *FieldOptionsWorkato) GetControlType() string {
	if x != nil {
		return x.ControlType
	}
	return ""
}

var file_s12_protobuf_workato_annotations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*MethodOptionsWorkato)(nil),
		Field:         50009,
		Name:          "s12.protobuf.workato.method",
		Tag:           "bytes,50009,opt,name=method",
		Filename:      "s12/protobuf/workato/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldOptionsWorkato)(nil),
		Field:         50009,
		Name:          "s12.protobuf.workato.field",
		Tag:           "bytes,50009,opt,name=field",
		Filename:      "s12/protobuf/workato/annotations.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// See `MethodOptionsWorkato`.
	//
	// optional s12.protobuf.workato.MethodOptionsWorkato method = 50009;
	E_Method = &file_s12_protobuf_workato_annotations_proto_extTypes[0]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// See `FieldOptionsWorkato`.
	//
	// optional s12.protobuf.workato.FieldOptionsWorkato field = 50009;
	E_Field = &file_s12_protobuf_workato_annotations_proto_extTypes[1]
)

var File_s12_protobuf_workato_annotations_proto protoreflect.FileDescriptor

const file_s12_protobuf_workato_annotations_proto_rawDesc = "" +
	"\n" +
	"&s12/protobuf/workato/annotations.proto\x12\x14s12.protobuf.workato\x1a google/protobuf/descriptor.proto\x1a\x19google/protobuf/any.proto\"=\n" +
	"\x0fPicklistOptions\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\xbd\x01\n" +
	"\x14MethodOptionsWorkato\x12\x18\n" +
	"\atrigger\x18\x01 \x01(\bR\atrigger\x12A\n" +
	"\bpicklist\x18\x02 \x01(\v2%.s12.protobuf.workato.PicklistOptionsR\bpicklist\x12\x1e\n" +
	"\bexcluded\x18\x03 \x01(\bB\x02\x18\x01R\bexcluded\x12(\n" +
	"\x0factionGroupName\x18\x04 \x01(\tR\x0factionGroupName\"\xbd\x01\n" +
	"\x13FieldOptionsWorkato\x12)\n" +
	"\x10dynamic_picklist\x18\x01 \x01(\tR\x0fdynamicPicklist\x12\x1e\n" +
	"\bexcluded\x18\x02 \x01(\bB\x02\x18\x01R\bexcluded\x12\x1a\n" +
	"\bpicklist\x18\x03 \x01(\tR\bpicklist\x12\x1c\n" +
	"\timportant\x18\x04 \x01(\bR\timportant\x12!\n" +
	"\fcontrol_type\x18\x05 \x01(\tR\vcontrolType:d\n" +
	"\x06method\x12\x1e.google.protobuf.MethodOptions\x18ن\x03 \x01(\v2*.s12.protobuf.workato.MethodOptionsWorkatoR\x06method:`\n" +
	"\x05field\x12\x1d.google.protobuf.FieldOptions\x18ن\x03 \x01(\v2).s12.protobuf.workato.FieldOptionsWorkatoR\x05fieldBJZHgithub.com/SafetyCulture/protoc-gen-workato/s12/protobuf/workato;workatob\x06proto3"

var (
	file_s12_protobuf_workato_annotations_proto_rawDescOnce sync.Once
	file_s12_protobuf_workato_annotations_proto_rawDescData []byte
)

func file_s12_protobuf_workato_annotations_proto_rawDescGZIP() []byte {
	file_s12_protobuf_workato_annotations_proto_rawDescOnce.Do(func() {
		file_s12_protobuf_workato_annotations_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_s12_protobuf_workato_annotations_proto_rawDesc), len(file_s12_protobuf_workato_annotations_proto_rawDesc)))
	})
	return file_s12_protobuf_workato_annotations_proto_rawDescData
}

var file_s12_protobuf_workato_annotations_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_s12_protobuf_workato_annotations_proto_goTypes = []any{
	(*PicklistOptions)(nil),            // 0: s12.protobuf.workato.PicklistOptions
	(*MethodOptionsWorkato)(nil),       // 1: s12.protobuf.workato.MethodOptionsWorkato
	(*FieldOptionsWorkato)(nil),        // 2: s12.protobuf.workato.FieldOptionsWorkato
	(*descriptorpb.MethodOptions)(nil), // 3: google.protobuf.MethodOptions
	(*descriptorpb.FieldOptions)(nil),  // 4: google.protobuf.FieldOptions
}
var file_s12_protobuf_workato_annotations_proto_depIdxs = []int32{
	0, // 0: s12.protobuf.workato.MethodOptionsWorkato.picklist:type_name -> s12.protobuf.workato.PicklistOptions
	3, // 1: s12.protobuf.workato.method:extendee -> google.protobuf.MethodOptions
	4, // 2: s12.protobuf.workato.field:extendee -> google.protobuf.FieldOptions
	1, // 3: s12.protobuf.workato.method:type_name -> s12.protobuf.workato.MethodOptionsWorkato
	2, // 4: s12.protobuf.workato.field:type_name -> s12.protobuf.workato.FieldOptionsWorkato
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	3, // [3:5] is the sub-list for extension type_name
	1, // [1:3] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_s12_protobuf_workato_annotations_proto_init() }
func file_s12_protobuf_workato_annotations_proto_init() {
	if File_s12_protobuf_workato_annotations_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_s12_protobuf_workato_annotations_proto_rawDesc), len(file_s12_protobuf_workato_annotations_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_s12_protobuf_workato_annotations_proto_goTypes,
		DependencyIndexes: file_s12_protobuf_workato_annotations_proto_depIdxs,
		MessageInfos:      file_s12_protobuf_workato_annotations_proto_msgTypes,
		ExtensionInfos:    file_s12_protobuf_workato_annotations_proto_extTypes,
	}.Build()
	File_s12_protobuf_workato_annotations_proto = out.File
	file_s12_protobuf_workato_annotations_proto_goTypes = nil
	file_s12_protobuf_workato_annotations_proto_depIdxs = nil
}
